[[!meta title="JPass password manager"]]

For more information about why this software, you can read about the history of
it on [[password_management_history]].

# Usage

`jpass` is to be used in a terminal. Without any arguments, it will read the
default configuration file, located in `~/.jpass.conf`. Otherwise you can
specify the path of the configuration file as argument: `jpass
[configuration_file]`

# Configuration file

The configuration follows the syntax of the
[ConfigParser](https://docs.python.org/dev/library/configparser.html) module
that is part of Python.

In the configuration file, you define named services, and parameters for each service.
An example is as follow:

    [DEFAULT]
        method = sha256:base64
        length = 8
        pauth = alnum

    [google.com]
        iden = yourname
        extra = 1211

    [startssl]
        extra = 0114
        length = 10
        comment = my ssl free certificate

    [mybank.com]
        extra = 0414
        length = 6
        pauth = digit

    [common1]
        extra = 1211

    [amazon.com]
        parent = common1
        iden = myemail

    [shittywebsite.com]
        parent = common1
        iden = myemail
        length = 9
        preq = lower:1, upper:1, digit:1, punct:1:8

The `DEFAULT` section should define default parameters that all other sections
will inherit from, although those parameters can be overridden. At least
`method`, `length` and `pauth` should be defined for every services.

Here is the list of possible parameters with explanations:

* **method**: method for generating the password. Should be everything that the `hashlib` python module can do (':' indicates piping). *So far, jpass only supports sha256:base64 method.*
* **length**: length of the password.
* **pauth**: set of authorized characters in the password.
 * *alnum* ('a-zA-Z0-9')
 * *alpha* ('a-zA-Z')
 * *lower* ('a-z')
 * *upper* ('A-Z')
 * *digit* ('0-9')
 * *punct* ('/+')
* **preq**: list of required characters in the password. You can specify the
  number of characters of a certain class. You can also specify what should be
  the position of the characters in the password. The format is:
  `[lower|upper|digit|punct]:number[:position1:position2:...], ...`
* **iden**: identifier for that service
* **parent**: indicates another section from which the current section inherits
  from (all sections inherit from `DEFAULT` first).
* **extra**: extra token to add to the section name to generate the passphrase.
* **comment**: optional user string

# Code

You can find the source code of `jpass` on my
[cgit website](https://joel.porquet.org/cgit/cgit.cgi/jpass.git/).

# Archlinux package

I packaged `jpass` for ArchLinux. Find the webpage on
[AUR](https://aur.archlinux.org/packages/jpass).
